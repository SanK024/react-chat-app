"use strict";(self.webpackChunkchat_app=self.webpackChunkchat_app||[]).push([[1608],{3544:(a,t,e)=>{e.d(t,{I:()=>s,TextDrawer:()=>i});var n=e(4864);const s=["text","character","char","multiline-text"];class i{async draw(a){const{drawText:t}=await e.e(4552).then(e.bind(e,4552));t(a)}async init(a){const t=a.actualOptions;if(s.find((a=>(0,n.Sc)(a,t.particles.shape.type)))){const a=s.map((a=>t.particles.shape.options[a])).find((a=>!!a)),e=[];(0,n.yW)(a,(a=>{e.push((0,n.or)(a.font,a.weight))})),await Promise.all(e)}}async particleInit(a,t){if(!t.shape||!s.includes(t.shape))return;const e=t.shapeData;if(void 0===e)return;const i=e.value;void 0!==i&&(t.text=(0,n.pd)(i,t.randomIndexData),await Promise.resolve())}}},1608:(a,t,e)=>{e.d(t,{loadTextShape:()=>s});var n=e(3544);async function s(a){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const{TextDrawer:s}=await Promise.resolve().then(e.bind(e,3544));await a.addShape(n.I,new s,t)}}}]);
//# sourceMappingURL=1608.1973b0e0.chunk.js.map